{"version":3,"sources":["scripts/common.js","../node_modules/dom-to-image/src/dom-to-image.js","scripts/obj/PostBuilder.js","scripts/obj/theme.js","../src/FileSaver.js","scripts/index.js"],"names":["$","selector","nodes","document","querySelectorAll","nodesArray","Array","from","length","isDesktop","window","innerWidth","isBoolean","val","isNumber","isNaN","parseInt","Element","prototype","animate","property","value","duration","timing","callback","classList","add","style","transition","setTimeout","addEventListener","remove","fadeIn","displayMode","limit","currentTransiton","display","opacity","fadeOut","disable","data","key","undefined","rawVal","getAttribute","returnVal","setAttribute","PostBuilder","constructor","tweet","user","media","theme","top","createPhoto","post","forEach","el","contains","date","likes","croppedMaxHeight","innerHeight","src","profile_image_url","replace","innerHTML","name","username","text","hours","minutes","day","month","year","parseFloat","toFixed","applyTheme","actualHeight","placeholder","amount","mediaContainer","whRatio","width","height","offsetWidth","postPadding","offsetHeight","querySelector","type","url","preview_image_url","counter","image","backgroundImage","backgroundColor","background","color","primary","secondary","getPostTop","Theme","accent","textPrimary","textSecondary","Accents","BLUE","YELLOW","RED","PURPLE","ORANGE","GREEN","Themes","WHITE","DIM","MIDNIGHT","activePost","showingPost","showingSettings","TWITTER_TOKEN","themesTypes","Object","keys","likesTypes","dateTypes","hideSettings","option","showSettings","showTweet","active","parseTweetInformation","Error","tweet_data","twDateArray","Date","created_at","toString","split","twTimeArray","tweetDate","full","join","dayName","seconds","id","public_metrics","like_count","filter","includes","users","getTweetInformation","endpointURL","params","combinedParams","p","requestURL","res","fetch","headers","then","response","json","createScreenshot","sourceNode","targetNode","download","dom2Img","toBlob","marginTop","position","blob","saveAs","catch","error","console","toPng","dataUrl","img","createElement","element","appendChild","zIndex","draggable","log","input","results","tweetData","newTheme","optionIcons","toLowerCase","dateType","newHeart"],"mappings":";AA8EA,aA9EO,SAASA,EAAEC,GACRC,MAAAA,EAAQC,SAASC,iBAAiBH,GAClCI,EAAaC,MAAMC,KAAKL,GACtBG,OAAqB,GAArBA,EAAWG,OAAeH,EAAW,GAAKA,EAG/C,SAASI,IACLC,OAAAA,OAAOC,WAAa,IAGxB,SAASC,EAAUC,GACfA,MAAQ,SAARA,GAA0B,UAARA,EAGtB,SAASC,EAASD,GACd,OAACE,MAAMC,SAASH,IA+D3B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,EAAA,EAAA,QAAA,UAAA,EAAA,QAAA,UAAA,EAAA,QAAA,SAAA,EA5DAI,QAAQC,UAAUC,QAAU,SAASC,EAAUC,EAAOC,EAAS,IAAKC,EAAO,cAAeC,GACjFC,KAAAA,UAAUC,IAAI,aACdC,KAAAA,MAAMC,cAAgBR,KAAYE,OAAcC,IAErDM,WAAW,KACFF,KAAAA,MAAMP,GAAYC,EAClBS,KAAAA,iBAAiB,gBAAiB,KAC9BL,KAAAA,UAAUM,OAAO,aACA,mBAAZP,GACNA,OAGT,MAGPP,QAAQC,UAAUc,OAAS,SAASV,EAAS,IAAKW,GAAY,EAAOC,EAAM,EAAGV,GACpEW,MAAAA,EAAmB,KAAKR,MAAMC,WAE/BH,KAAAA,UAAUC,IAAI,UACdC,KAAAA,MAAMC,sBAAwBN,eAChB,IAAhBW,IACMN,KAAAA,MAAMS,QAAUH,GAGzBJ,WAAW,KACFF,KAAAA,MAAMU,QAAUH,GACtB,KAEHL,WAAW,KACFJ,KAAAA,UAAUM,OAAO,UACjBJ,KAAAA,MAAMC,WAAaO,EAEF,mBAAZX,GACNA,KAELF,EAAW,MAIlBL,QAAQC,UAAUoB,QAAU,SAAShB,EAAS,IAAKiB,GAAQ,EAAOL,EAAM,EAAGV,GACjEW,MAAAA,EAAmB,KAAKR,MAAMC,WAE/BH,KAAAA,UAAUC,IAAI,UACdC,KAAAA,MAAMC,sBAAwBN,eACnCO,WAAW,KACFF,KAAAA,MAAMU,QAAUH,GACtB,KAEHL,WAAW,KACFJ,KAAAA,UAAUM,OAAO,UACjBJ,KAAAA,MAAMC,WAAaO,EACrBI,IACMZ,KAAAA,MAAMS,QAAU,QAEH,mBAAZZ,GACNA,KAELF,EAAW,MAGlBL,QAAQC,UAAUsB,KAAO,SAASC,EAAKpB,GAChCA,QAAUqB,IAAVrB,EAAqB,CACdsB,MAAAA,EAAS,KAAKC,qBAAqBH,KACrCI,IAAAA,EAAYF,EAKTE,OAHJ/B,EAAS6B,KAASE,EAAY7B,SAAS2B,IACvC/B,EAAU+B,KAASE,EAAuB,QAAVF,GAE5BE,EAEA,OAAA,KAAKC,qBAAqBL,IAAOpB;;;ACyqBhD,IAAA,EAAA,UAAA,IAjwBA,SAAA,GACA,aAEA,IAAA,EAwVA,WACA,MAAA,CACA,OAmLA,SAAA,GACA,OAAA,EAAA,QAAA,2BAAA,SAnLA,eAAA,EACA,SA2CA,SAAA,GACA,IAAA,EAAA,EAAA,GAAA,cACA,OAzBA,EAAA,wBAGA,CACA,KAAA,EACA,MAAA,EACA,IAAA,4BACA,IAAA,gCACA,IAAA,YACA,IARA,aASA,KATA,aAUA,IAAA,YACA,KAAA,aACA,IAAA,kBAYA,IAAA,GA9BA,IAKA,GAnBA,UA4KA,SAAA,EAAA,GACA,MAAA,QAAA,EAAA,WAAA,GA5KA,UA8CA,SAAA,GACA,OAAA,IAAA,EAAA,OAAA,aA9CA,aAgEA,SAAA,GACA,OAAA,EAAA,OACA,IAAA,QAAA,SAAA,GACA,EAAA,OAAA,KAlBA,SAAA,GACA,OAAA,IAAA,QAAA,SAAA,GAKA,IAJA,IAAA,EAAA,OAAA,KAAA,EAAA,YAAA,MAAA,KAAA,IACA,EAAA,EAAA,OACA,EAAA,IAAA,WAAA,GAEA,EAAA,EAAA,EAAA,EAAA,IACA,EAAA,GAAA,EAAA,WAAA,GAEA,EAAA,IAAA,KAAA,CAAA,GAAA,CACA,KAAA,iBAWA,CAAA,IArEA,WAwEA,SAAA,EAAA,GACA,IAAA,EAAA,SAAA,eAAA,qBACA,EAAA,EAAA,cAAA,QACA,EAAA,KAAA,YAAA,GACA,IAAA,EAAA,EAAA,cAAA,KAIA,OAHA,EAAA,KAAA,YAAA,GACA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,MA/EA,aA0GA,SAAA,GACA,IAAA,EAAA,IACA,EAAA,KAAA,QAAA,YAGA,IAAA,KAAA,KAAA,GAAA,IAAA,MAAA,IAAA,MAAA,WAGA,OAAA,IAAA,QAAA,SAAA,GACA,IASA,EATA,EAAA,IAAA,eAUA,GARA,EAAA,mBAeA,WACA,GAAA,IAAA,EAAA,WAAA,OAEA,GAAA,MAAA,EAAA,OAOA,YANA,EACA,EAAA,GAEA,EAAA,0BAAA,EAAA,aAAA,EAAA,SAMA,IAAA,EAAA,IAAA,WACA,EAAA,UAAA,WACA,IAAA,EAAA,EAAA,OAAA,MAAA,KAAA,GACA,EAAA,IAEA,EAAA,cAAA,EAAA,WAhCA,EAAA,UAmCA,WACA,EACA,EAAA,GAEA,EAAA,cAAA,EAAA,uCAAA,IAtCA,EAAA,aAAA,OACA,EAAA,QAAA,EACA,EAAA,KAAA,MAAA,GAAA,GACA,EAAA,OAGA,EAAA,KAAA,QAAA,iBAAA,CACA,IAAA,EAAA,EAAA,KAAA,QAAA,iBAAA,MAAA,KACA,GAAA,EAAA,KACA,EAAA,EAAA,IAiCA,SAAA,EAAA,GACA,QAAA,MAAA,GACA,EAAA,QAlKA,KAkFA,EAAA,EAEA,WACA,MAAA,KAIA,QAAA,KAAA,SAAA,KAAA,IAAA,GAAA,IAAA,GAAA,SAAA,KAAA,OAAA,GAJA,MApFA,MA8KA,SAAA,GACA,OAAA,SAAA,GACA,OAAA,IAAA,QAAA,SAAA,GACA,WAAA,WACA,EAAA,IACA,OAlLA,QAuLA,SAAA,GAGA,IAFA,IAAA,EAAA,GACA,EAAA,EAAA,OACA,EAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IACA,OAAA,GA1LA,YA6LA,SAAA,GACA,OAAA,EAAA,QAAA,KAAA,OAAA,QAAA,MAAA,QA7LA,UA0FA,SAAA,GACA,OAAA,IAAA,QAAA,SAAA,EAAA,GACA,IAAA,EAAA,IAAA,MACA,EAAA,OAAA,WACA,EAAA,IAEA,EAAA,QAAA,EACA,EAAA,IAAA,KAhGA,MA+LA,SAAA,GACA,IAAA,EAAA,EAAA,EAAA,qBACA,EAAA,EAAA,EAAA,sBACA,OAAA,EAAA,YAAA,EAAA,GAjMA,OAoMA,SAAA,GACA,IAAA,EAAA,EAAA,EAAA,oBACA,EAAA,EAAA,EAAA,uBACA,OAAA,EAAA,aAAA,EAAA,IA5HA,IACA,EAnDA,SAAA,EAAA,GACA,IAAA,EAAA,kBAAA,KAAA,GACA,OAAA,EAAA,EAAA,GACA,GA8KA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,OAAA,iBAAA,GAAA,iBAAA,GACA,OAAA,WAAA,EAAA,QAAA,KAAA,MApjBA,GACA,EAujBA,WACA,IAAA,EAAA,8BAEA,MAAA,CACA,UAyCA,SAAA,EAAA,EAAA,GACA,OAeA,EAAA,GAbA,QAAA,QAAA,GACA,KAAA,GACA,KAAA,SAAA,GACA,IAAA,EAAA,QAAA,QAAA,GAMA,OALA,EAAA,QAAA,SAAA,GACA,EAAA,EAAA,KAAA,SAAA,GACA,OAAA,EAAA,EAAA,EAAA,EAAA,OAGA,IAXA,QAAA,QAAA,IAzCA,cAAA,EACA,KAAA,CACA,SAAA,EACA,OAAA,IAIA,SAAA,EAAA,GACA,OAAA,IAAA,EAAA,OAAA,GAGA,SAAA,EAAA,GAGA,IAFA,IACA,EADA,EAAA,GAEA,QAAA,EAAA,EAAA,KAAA,KACA,EAAA,KAAA,EAAA,IAEA,OAAA,EAAA,OAAA,SAAA,GACA,OAAA,EAAA,UAAA,KAIA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,OAAA,QAAA,QAAA,GACA,KAAA,SAAA,GACA,OAAA,EAAA,EAAA,WAAA,EAAA,GAAA,IAEA,KAAA,GAAA,EAAA,cACA,KAAA,SAAA,GACA,OAAA,EAAA,UAAA,EAAA,EAAA,SAAA,MAEA,KAAA,SAAA,GACA,OAAA,EAAA,QAGA,SAAA,GACA,OAAA,IAAA,OAAA,kBAAA,EAAA,OAAA,GAAA,eAAA,KAJA,CAAA,GAAA,KAAA,EAAA,SA5lBA,GACA,EAwnBA,WACA,MAAA,CACA,WAMA,WACA,OAAA,EAAA,UACA,KAAA,SAAA,GACA,OAAA,QAAA,IACA,EAAA,IAAA,SAAA,GACA,OAAA,EAAA,eAIA,KAAA,SAAA,GACA,OAAA,EAAA,KAAA,SAfA,KAAA,CACA,QAAA,IAkBA,SAAA,IACA,OAAA,QAAA,QAAA,EAAA,QAAA,SAAA,cACA,KAgBA,SAAA,GACA,IAAA,EAAA,GAQA,OAPA,EAAA,QAAA,SAAA,GACA,IACA,EAAA,QAAA,EAAA,UAAA,IAAA,QAAA,EAAA,KAAA,KAAA,IACA,MAAA,GACA,QAAA,IAAA,sCAAA,EAAA,KAAA,EAAA,eAGA,IAxBA,KAKA,SAAA,GACA,OAAA,EACA,OAAA,SAAA,GACA,OAAA,EAAA,OAAA,QAAA,iBAEA,OAAA,SAAA,GACA,OAAA,EAAA,cAAA,EAAA,MAAA,iBAAA,YAVA,KAAA,SAAA,GACA,OAAA,EAAA,IAAA,KAyBA,SAAA,EAAA,GACA,MAAA,CACA,QAAA,WACA,IAAA,GAAA,EAAA,kBAAA,IAAA,KACA,OAAA,EAAA,UAAA,EAAA,QAAA,IAEA,IAAA,WACA,OAAA,EAAA,MAAA,iBAAA,WAnrBA,GACA,EAyrBA,WACA,MAAA,CACA,UA6BA,SAAA,EAAA,GACA,KAAA,aAAA,SAAA,OAAA,QAAA,QAAA,GAEA,OAYA,SAAA,GACA,IAAA,EAAA,EAAA,MAAA,iBAAA,cAEA,OAAA,EAEA,EAAA,UAAA,GACA,KAAA,SAAA,GACA,EAAA,MAAA,YACA,aACA,EACA,EAAA,MAAA,oBAAA,iBAGA,KAAA,WACA,OAAA,IAXA,QAAA,QAAA,GAfA,CAAA,GACA,KAAA,WACA,OAAA,aAAA,iBACA,EAAA,GAAA,SAEA,QAAA,IACA,EAAA,QAAA,EAAA,YAAA,IAAA,SAAA,GACA,OAAA,EAAA,SAtCA,KAAA,CACA,SAAA,IAIA,SAAA,EAAA,GACA,MAAA,CACA,OAGA,SAAA,GACA,OAAA,EAAA,UAAA,EAAA,KAAA,QAAA,UAEA,QAAA,QAAA,EAAA,KACA,KAAA,GAAA,EAAA,cACA,KAAA,SAAA,GACA,OAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA,QAEA,KAAA,SAAA,GACA,OAAA,IAAA,QAAA,SAAA,EAAA,GACA,EAAA,OAAA,EACA,EAAA,QAAA,EACA,EAAA,IAAA,SAltBA,GAGA,EAAA,CAEA,sBAAA,EAEA,WAAA,GAGA,EAAA,CACA,MAAA,EACA,MAwFA,SAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,IACA,KAAA,SAAA,GACA,OAAA,EAAA,eA1FA,OAmGA,SAAA,EAAA,GAEA,OAAA,EAAA,EADA,EAAA,GAAA,IAEA,KAAA,SAAA,GACA,OAAA,EAAA,UAAA,aAAA,EAAA,SAAA,MAtGA,OA+GA,SAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,IACA,KAAA,EAAA,eAhHA,YAoEA,SAAA,EAAA,GACA,OAAA,EAAA,EAAA,GAAA,IACA,KAAA,SAAA,GACA,OAAA,EAAA,WAAA,MAAA,aACA,EACA,EACA,EAAA,MAAA,GACA,EAAA,OAAA,IACA,QA3EA,KAAA,CACA,UAAA,EACA,OAAA,EACA,KAAA,EACA,QAAA,EACA,QAAA,KAyBA,SAAA,EAAA,EAAA,GAGA,OAiFA,SAAA,QAEA,IAAA,EAAA,iBACA,EAAA,KAAA,QAAA,iBAAA,EAAA,iBAEA,EAAA,KAAA,QAAA,iBAAA,EAAA,sBAGA,IAAA,EAAA,UACA,EAAA,KAAA,QAAA,UAAA,EAAA,UAEA,EAAA,KAAA,QAAA,UAAA,EAAA,UA7FA,CADA,EAAA,GAAA,IAEA,QAAA,QAAA,GACA,KAAA,SAAA,GACA,OAuHA,SAAA,EAAA,EAAA,GACA,IAAA,GAAA,IAAA,EAAA,GAAA,OAAA,QAAA,UAEA,OAAA,QAAA,QAAA,GACA,KAQA,SAAA,GACA,OAAA,aAAA,kBAAA,EAAA,UAAA,EAAA,aACA,EAAA,WAAA,KATA,KAAA,SAAA,GACA,OAWA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,WACA,OAAA,IAAA,EAAA,OAAA,QAAA,QAAA,GAOA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,QAAA,UAUA,OATA,EAAA,QAAA,SAAA,GACA,EAAA,EACA,KAAA,WACA,OAAA,EAAA,EAAA,KAEA,KAAA,SAAA,GACA,GAAA,EAAA,YAAA,OAGA,EAhBA,CAAA,EAAA,EAAA,QAAA,GAAA,GACA,KAAA,WACA,OAAA,IAjBA,CAAA,EAAA,EAAA,KAEA,KAAA,SAAA,GACA,OAgCA,SAAA,EAAA,GACA,OAAA,aAAA,QAEA,QAAA,UACA,KAQA,WAGA,IAAA,EAAA,EAAA,EAFA,OAAA,iBAAA,GAEA,EAFA,EAAA,MAGA,EAAA,QAAA,EAAA,QAAA,EAAA,QAGA,SAAA,EAAA,GACA,EAAA,QAAA,GAAA,QAAA,SAAA,GACA,EAAA,YACA,EACA,EAAA,iBAAA,GACA,EAAA,oBAAA,MAPA,CAAA,EAAA,KAZA,KA0BA,WACA,CAAA,UAAA,UAAA,QAAA,SAAA,IAIA,SAAA,GACA,IAAA,EAAA,OAAA,iBAAA,EAAA,GACA,EAAA,EAAA,iBAAA,WAEA,GAAA,KAAA,GAAA,SAAA,EAAA,CAEA,IAAA,EAAA,EAAA,MACA,EAAA,UAAA,EAAA,UAAA,IAAA,EACA,IAAA,EAAA,SAAA,cAAA,SACA,EAAA,YAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,IAAA,EAAA,IAAA,EACA,EAAA,EAAA,QAGA,SAAA,GACA,IAAA,EAAA,EAAA,iBAAA,WACA,OAAA,EAAA,QAAA,aAAA,EAAA,IALA,CAAA,GAQA,SAAA,GAEA,OAAA,EAAA,QAAA,GACA,IAGA,SAAA,GACA,OAAA,EAAA,KACA,EAAA,iBAAA,IACA,EAAA,oBAAA,GAAA,cAAA,MALA,KAAA,MAAA,IAZA,CAAA,GACA,OAAA,SAAA,eAAA,EAAA,IAAA,EAAA,KANA,CAAA,EAAA,EAAA,IACA,EAAA,YAAA,IAbA,CAAA,OA3BA,KAoEA,WACA,aAAA,sBAAA,EAAA,UAAA,EAAA,OACA,aAAA,kBAAA,EAAA,aAAA,QAAA,EAAA,SArEA,KAwEA,WACA,aAAA,aACA,EAAA,aAAA,QAAA,8BAEA,aAAA,gBACA,CAAA,QAAA,UAAA,QAAA,SAAA,GACA,IAAA,EAAA,EAAA,aAAA,GACA,GAEA,EAAA,MAAA,YAAA,EAAA,QAhFA,KAAA,WACA,OAAA,IARA,EAjCA,CAAA,EAAA,KAhIA,CAAA,EAAA,EAAA,QAAA,KAEA,KAAA,GACA,KAAA,GACA,KAQA,SAAA,GACA,EAAA,UAAA,EAAA,MAAA,gBAAA,EAAA,SAEA,EAAA,QAAA,EAAA,MAAA,MAAA,EAAA,MAAA,MACA,EAAA,SAAA,EAAA,MAAA,OAAA,EAAA,OAAA,MAEA,EAAA,OACA,OAAA,KAAA,EAAA,OAAA,QAAA,SAAA,GACA,EAAA,MAAA,GAAA,EAAA,MAAA,KAGA,OAAA,IAlBA,KAAA,SAAA,GACA,OAyQA,SAAA,EAAA,EAAA,GACA,OAAA,QAAA,QAAA,GACA,KAAA,SAAA,GAEA,OADA,EAAA,aAAA,QAAA,iCACA,IAAA,eAAA,kBAAA,KAEA,KAAA,EAAA,aACA,KAAA,SAAA,GACA,MAAA,yDAAA,EAAA,qBAEA,KAAA,SAAA,GACA,MAAA,kDAAA,EAAA,aAAA,EAAA,KACA,EAAA,WAEA,KAAA,SAAA,GACA,MAAA,oCAAA,IAxRA,CAAA,EACA,EAAA,OAAA,EAAA,MAAA,GACA,EAAA,QAAA,EAAA,OAAA,MAsFA,SAAA,EAAA,EAAA,GACA,OAAA,EAAA,EAAA,GACA,KAAA,EAAA,WACA,KAAA,EAAA,MAAA,MACA,KAAA,SAAA,GACA,IAAA,EAKA,SAAA,GACA,IAAA,EAAA,SAAA,cAAA,UAIA,GAHA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,GACA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,GAEA,EAAA,QAAA,CACA,IAAA,EAAA,EAAA,WAAA,MACA,EAAA,UAAA,EAAA,QACA,EAAA,SAAA,EAAA,EAAA,EAAA,MAAA,EAAA,QAGA,OAAA,EAhBA,CAAA,GAEA,OADA,EAAA,WAAA,MAAA,UAAA,EAAA,EAAA,GACA,IAkBA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,GAAA,IAAA,EAAA,GAAA,OAAA,QAAA,UAEA,OAAA,QAAA,QAAA,GACA,KAAA,GACA,KAAA,SAAA,GACA,OAAA,EAAA,EAAA,EAAA,KAEA,KAAA,SAAA,GACA,OAAA,EAAA,EAAA,KAGA,SAAA,EAAA,GACA,OAAA,aAAA,kBAAA,EAAA,UAAA,EAAA,aACA,EAAA,WAAA,GAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,WACA,OAAA,IAAA,EAAA,OAAA,QAAA,QAAA,GAOA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,QAAA,UAUA,OATA,EAAA,QAAA,SAAA,GACA,EAAA,EACA,KAAA,WACA,OAAA,EAAA,EAAA,KAEA,KAAA,SAAA,GACA,GAAA,EAAA,YAAA,OAGA,EAhBA,CAAA,EAAA,EAAA,QAAA,GAAA,GACA,KAAA,WACA,OAAA,IAGA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,QAAA,UAUA,OATA,EAAA,QAAA,SAAA,GACA,EAAA,EACA,KAAA,WACA,OAAA,EAAA,EAAA,KAEA,KAAA,SAAA,GACA,GAAA,EAAA,YAAA,OAGA,GAIA,SAAA,EAAA,EAAA,GACA,OAAA,aAAA,QAEA,QAAA,UACA,KAQA,YAGA,SAAA,EAAA,GACA,EAAA,QAAA,EAAA,QAAA,EAAA,QAGA,SAAA,EAAA,GACA,EAAA,QAAA,GAAA,QAAA,SAAA,GACA,EAAA,YACA,EACA,EAAA,iBAAA,GACA,EAAA,oBAAA,MAPA,CAAA,EAAA,GAJA,CAAA,OAAA,iBAAA,GAAA,EAAA,SARA,KA0BA,WACA,CAAA,UAAA,UAAA,QAAA,SAAA,IAIA,SAAA,GACA,IAAA,EAAA,OAAA,iBAAA,EAAA,GACA,EAAA,EAAA,iBAAA,WAEA,GAAA,KAAA,GAAA,SAAA,EAAA,OAEA,IAAA,EAAA,EAAA,MACA,EAAA,UAAA,EAAA,UAAA,IAAA,EACA,IAAA,EAAA,SAAA,cAAA,SACA,EAAA,YAGA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,IAAA,EAAA,IAAA,EACA,EAAA,EAAA,QAGA,SAAA,GACA,IAAA,EAAA,EAAA,iBAAA,WACA,OAAA,EAAA,QAAA,aAAA,EAAA,IALA,CAAA,GAQA,SAAA,GAEA,OAAA,EAAA,QAAA,GACA,IAGA,SAAA,GACA,OAAA,EAAA,KACA,EAAA,iBAAA,IACA,EAAA,oBAAA,GAAA,cAAA,MALA,KAAA,MAAA,IAZA,CAAA,GACA,OAAA,SAAA,eAAA,EAAA,IAAA,EAAA,KANA,CAAA,EAAA,EAAA,IACA,EAAA,YAAA,GAbA,CAAA,OA3BA,KAoEA,WACA,aAAA,sBAAA,EAAA,UAAA,EAAA,OACA,aAAA,kBAAA,EAAA,aAAA,QAAA,EAAA,SArEA,KAwEA,WACA,KAAA,aAAA,YAAA,OAGA,GAFA,EAAA,aAAA,QAAA,gCAEA,aAAA,gBAAA,OACA,CAAA,QAAA,UAAA,QAAA,SAAA,GACA,IAAA,EAAA,EAAA,aAAA,GACA,GAEA,EAAA,MAAA,YAAA,EAAA,OAhFA,KAAA,WACA,OAAA,IARA,EAWA,SAAA,IAGA,SAAA,EAAA,EAAA,GACA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,aACA,EAAA,EAAA,GAEA,SAAA,EAAA,EAAA,GACA,EAAA,QAAA,GAAA,QAAA,SAAA,GACA,EAAA,YACA,EACA,EAAA,iBAAA,GACA,EAAA,oBAAA,OAXA,EAAA,OAAA,iBAAA,GAAA,EAAA,OAkBA,SAAA,IAKA,SAAA,EAAA,GACA,IAAA,EAAA,OAAA,iBAAA,EAAA,GACA,EAAA,EAAA,iBAAA,WAEA,GAAA,IAAA,IAAA,IAAA,OAAA,OAEA,IAAA,EAAA,EAAA,MACA,EAAA,UAAA,EAAA,UAAA,IAAA,EACA,IAAA,EAAA,SAAA,cAAA,SAIA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,IAAA,EAAA,IAAA,EACA,EAAA,EAAA,QAAA,EAAA,GAAA,EAAA,GACA,OAAA,SAAA,eAAA,EAAA,IAAA,EAAA,KAEA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,iBAAA,WACA,OAAA,EAAA,QAAA,aAAA,EAAA,IAGA,SAAA,EAAA,GAEA,OAAA,EAAA,QAAA,GACA,IAAA,GACA,KAAA,MAAA,IAEA,SAAA,EAAA,GACA,OAAA,EAAA,KACA,EAAA,iBAAA,IACA,EAAA,oBAAA,GAAA,cAAA,MAtBA,EAAA,YAAA,EAAA,EAAA,EAAA,IACA,EAAA,YAAA,GAdA,CAAA,UAAA,UAAA,QAAA,SAAA,GACA,EAAA,KAyCA,SAAA,IACA,GAAA,aAAA,oBAAA,EAAA,UAAA,EAAA,MACA,GAAA,aAAA,iBAAA,EAAA,aAAA,QAAA,EAAA,OAGA,SAAA,IACA,KAAA,aAAA,YAAA,OAGA,GAFA,EAAA,aAAA,QAAA,gCAEA,aAAA,gBAAA,OACA,CAAA,QAAA,UAAA,QAAA,SAAA,GACA,IAAA,EAAA,EAAA,aAAA,GACA,IAAA,EAAA,OAEA,EAAA,MAAA,YAAA,EAAA,OAMA,SAAA,EAAA,GACA,OAAA,EAAA,aACA,KAAA,SAAA,GACA,IAAA,EAAA,SAAA,cAAA,SAGA,OAFA,EAAA,YAAA,GACA,EAAA,YAAA,SAAA,eAAA,IACA,IAIA,SAAA,EAAA,GACA,OAAA,EAAA,UAAA,GACA,KAAA,WACA,OAAA,IArSA,oBAAA,OACA,OAAA,QAAA,EAEA,EAAA,WAAA,EAlCA,CAgwBA;;;;;;ACvvByB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EATzB,IAAA,EAAA,QAAA,gBACA,EAAA,QAAA,eACA,EAAA,QAAA,mBAOO,MAAM0B,EAETC,YAAYC,EAAOC,EAAMC,EAAOC,GACvBH,KAAAA,MAAQA,EACRC,KAAAA,KAAOA,EACPC,KAAAA,MAAQA,EACRC,KAAAA,MAAQA,EACRC,KAAAA,IAIHC,oBACIC,MAAAA,GAAO,EAAE,EAAA,GAAA,mBAGfA,EAAKnD,iBAAiB,KAAKoD,QAAQC,IAC5BA,EAAGhC,UAAUiC,SAAS,YACrBD,EAAG9B,MAAMS,QAAU,gBAIrB,EAAiBmB,EAAAA,kBAAAA,GAAM,EAAE,EAAA,GAAA,aAG/BA,EAAKnD,iBAAiB,KAAKoD,QAAQC,IAC5BA,EAAGhC,UAAUiC,SAAS,YACrBD,EAAG9B,MAAMS,QAAU,MAM/BA,UACUuB,MAAAA,EAAO,KAAKV,MAAMU,KAClBC,EAAQ,KAAKX,MAAMW,MAEnBC,EAAmB,IAAOnD,OAAOoD,aAIrC,EAAA,EAAA,GAAA,mBAAmBnC,MAAMU,QAAU,GACnC,EAAA,EAAA,GAAA,WAAW0B,IAAM,KAAKb,KAAKc,kBAAkBC,QAAQ,UAAW,KAChE,EAAA,EAAA,GAAA,SAASC,UAAY,KAAKhB,KAAKiB,MAC/B,EAAA,EAAA,GAAA,aAAaD,cAAgB,KAAKhB,KAAKkB,YACvC,EAAA,EAAA,GAAA,SAASF,UAAY,KAAKjB,MAAMoB,MAChC,EAAA,EAAA,GAAA,kBAAkBH,aAAeP,EAAKW,SAASX,EAAKY,WACpD,EAAA,EAAA,GAAA,kBAAkBL,aAAeP,EAAKa,OAAOb,EAAKc,SAASd,EAAKe,QAChE,EAAA,EAAA,GAAA,iBAAiBR,UAAYN,GAAS,OAAUe,WAAWf,EAAM,KAAQgB,QAAQ,MAAQhB,EAEtFiB,KAAAA,WAAW,KAAKzB,QAGnB,EAAA,EAAA,GAAA,UAAUI,QAAQC,IAChBA,EAAGhC,UAAUC,IAAI,YAGjBoD,IAAAA,EAAe,EAIhB,IAHD,EAAA,EAAA,GAAA,kBAAkBf,IAAMgB,EAA1B,iBAGkBrC,IAAf,KAAKS,MAAqB,EACvB,EAAA,EAAA,GAAA,SAAS1B,UAAUM,OAAO,WAEtBiD,MAAAA,EAAS,KAAK7B,MAAM3C,OACpByE,GAAiB,EAAG,EAAA,aAASD,KAIhCA,GAHCC,EAAexD,UAAUM,OAAO,UAGtB,IAAXiD,EAAc,CACPE,MAAAA,EAAU,KAAK/B,MAAM,GAAGgC,MAAQ,KAAKhC,MAAM,GAAGiC,OAGpDN,IAFuB,EAAE,EAAA,GAAA,mBAAmBO,YAAcC,IAE1BJ,GAC7B,EAAE,EAAA,GAAA,kBAAkBzD,UAAUiC,SAAS,YAAcoB,EAAejB,IACnEiB,EAAejB,GAGnBiB,IAAgB,EAAE,EAAA,GAAA,mBAAmBS,aACrCN,EAAeO,cAAc,OAAOzB,IAA8B,UAAvB,KAAKZ,MAAM,GAAGsC,KAAoB,KAAKtC,MAAM,GAAGuC,IAAM,KAAKvC,MAAM,GAAGwC,sBAC5G,CACCC,IAAAA,EAAU,EAEdX,EAAe7E,iBAAiB,kBAAkBoD,QAAQC,IAChDoC,MAAAA,EAAqC,UAA7B,KAAK1C,MAAMyC,GAASH,KAAmB,KAAKtC,MAAMyC,GAASF,IAAM,KAAKvC,MAAMyC,GAASD,kBACnGlC,EAAG9B,MAAMmE,uBAAyBD,KAClCD,MAEJd,GAAe,EAAE,EAAA,GAAA,mBAAmBS,mBAGxCT,IAAgB,EAAE,EAAA,GAAA,mBAAmBS,cACnC,EAAA,EAAA,GAAA,SAAS9D,UAAUC,IAAI,WAGxB2B,KAAAA,KAAO3C,OAAOoD,YAAcgB,GAAgB,GAE/C,EAAA,EAAA,GAAA,mBAAmBnD,OAAM,EAAc,EAAA,aAAA,MAAQ,aAAe,KAAK0B,KACnE,EAAA,EAAA,GAAA,uBAAuB1B,MAAMU,QAAU,EAG7CwC,WAAWzB,IACL,EAAA,EAAA,GAAA,mBAAmBzB,MAAMoE,gBAAkB3C,EAAM4C,YACjD,EAAA,EAAA,GAAA,iBAAiBxC,QAAQC,GAAMA,EAAG9B,MAAMsE,MAAQ7C,EAAMiB,KAAK6B,UAC3D,EAAA,EAAA,GAAA,mBAAmB1C,QAAQC,GAAMA,EAAG9B,MAAMsE,MAAQ7C,EAAMiB,KAAK8B,WAGnEC,aACW,OAAA,KAAK/C,KA3GK,QAAA,YAAA;;ACWlB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,QAAA,QAAA,WAAA,EApBA,MAAMgD,EACTrD,YAAYgD,EAAYM,EAAQC,EAAaC,GACpCR,KAAAA,WAAaA,EACbM,KAAAA,OAASA,EACTjC,KAAAA,KAAO,CACR6B,QAASK,EACTJ,UAAWK,IAchB,QAAA,MAAA,EATA,MAAMC,EAAU,CACnBC,KAAM,UACNC,OAAQ,UACRC,IAAK,UACLC,OAAQ,UACRC,OAAQ,UACRC,MAAO,WAGJ,QAAA,QAAA,EAAA,MAAMC,EAAS,CAClBC,MAAO,IAAIZ,EAAM,UAAWI,EAAQC,KAAM,UAAW,WACrDQ,IAAK,IAAIb,EAAM,UAAWI,EAAQC,KAAM,UAAW,WACnDS,SAAU,IAAId,EAAM,UAAWI,EAAQC,KAAM,UAAW,YAHrD,QAAA,OAAA;;;;sBCFP,SAAA,EAAA,GAAA,mBAAA,GAAA,EAAA,IAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,KAAA,IAAA,EAAA,UAAA,IAAA,CAAA,KAAA,WAAA,aAeA,SAAS,EAAU,EAAK,EAAM,GAC5B,IAAI,EAAM,IAAI,eACd,EAAI,KAAK,MAAO,GAChB,EAAI,aAAe,OACnB,EAAI,OAAS,WACX,EAAO,EAAI,SAAU,EAAM,IAE7B,EAAI,QAAU,WACZ,QAAQ,MAAM,4BAEhB,EAAI,OAGN,SAAS,EAAa,GACpB,IAAI,EAAM,IAAI,eAEd,EAAI,KAAK,OAAQ,GAHQ,GAIzB,IACE,EAAI,OACJ,MAAO,IACT,OAAO,KAAA,EAAI,QAA+B,KAAd,EAAI,OAIlC,SAAS,EAAO,GACd,IACE,EAAK,cAAc,IAAI,WAAW,UAClC,MAAO,GACP,IAAI,EAAM,SAAS,YAAY,eAC/B,EAAI,eAAe,SAAqB,GAAA,EAAA,OAAQ,EAAG,EAAG,EAAG,GACnC,IAAgC,GAAA,GAAA,GAAA,EAAA,EAAG,MACzD,EAAK,cAAc,QApDnB,EAA4B,iBAAX,QAAuB,OAAO,SAAW,OAC1D,OAAyB,iBAAT,MAAqB,KAAK,OAAS,KACnD,KAAyB,iBAAX,GAAuB,EAAO,SAAW,EACvD,SAwDA,EAAiB,EAAQ,WAAa,YAAY,KAAK,UAAU,YAAc,cAAc,KAAK,UAAU,aAAe,SAAS,KAAK,UAAU,WAEnJ,EAAS,EAAQ,SAEA,iBAAX,QAAuB,SAAW,EACtC,aAGD,aAAc,kBAAkB,YAAc,EAC/C,SAAiB,EAAM,EAAM,GACzB,IAAA,EAAM,EAAQ,KAAO,EAAQ,UAC7B,EAAI,SAAS,cAAc,KAC/B,EAAO,GAAQ,EAAK,MAAQ,WAE5B,EAAE,SAAW,EACb,EAAE,IAAM,WAKY,iBAAT,GAET,EAAE,KAAO,EACL,EAAE,SAAW,SAAS,OAKxB,EAAM,GAJN,EAAY,EAAE,MACV,EAAS,EAAM,EAAM,GACrB,EAAM,EAAG,EAAE,OAAS,YAM1B,EAAE,KAAO,EAAI,gBAAgB,GAC7B,WAAW,WAAc,EAAI,gBAAgB,EAAE,OAAS,KACxD,WAAW,WAAc,EAAM,IAAM,KAKvC,qBAAsB,UACtB,SAAiB,EAAM,EAAM,GAG7B,GAFA,EAAO,GAAQ,EAAK,MAAQ,WAER,iBAAT,EAUT,UAAU,iBA1GhB,SAAc,EAAM,GACE,YAAA,IAAT,EAAsB,EAAO,CAAE,SAAF,GACf,iBAAT,IACd,QAAQ,KAAK,sDACb,EAAO,CAAE,SAAU,IAKjB,EAAK,SAAW,6EAA6E,KAAK,EAAK,MAClG,IAAI,KAAK,CAA8B,SAAA,GAAO,CAAE,KAAM,EAAK,OAE7D,EA8FwB,CAAI,EAAM,GAAO,QATxC,GAAA,EAAY,GACd,EAAS,EAAM,EAAM,OAChB,CACL,IAAI,EAAI,SAAS,cAAc,KAC/B,EAAE,KAAO,EACT,EAAE,OAAS,SACX,WAAW,WAAc,EAAM,OAQnC,SAAiB,EAAM,EAAM,EAAM,GASnC,IANA,EAAQ,GAAS,KAAK,GAAI,aAExB,EAAM,SAAS,MACf,EAAM,SAAS,KAAK,UAAY,kBAGd,iBAAT,EAAmB,OAAO,EAAS,EAAM,EAAM,GAThB,IAWtC,EAAsB,6BAAd,EAAK,KACb,EAAW,eAAe,KAAK,EAAQ,cAAgB,EAAQ,OAC/D,EAAc,eAAe,KAAK,UAAU,WAEhD,IAAK,GAAgB,GAAS,GAAa,IAAyC,oBAAf,WAA4B,CAE/F,IAAI,EAAS,IAAI,WACjB,EAAO,UAAY,WACjB,IAAI,EAAM,EAAO,OACjB,EAAM,EAAc,EAAM,EAAI,QAAQ,eAAgB,yBAClD,EAAO,EAAM,SAAS,KAAO,EAC5B,SAAW,EAChB,EAAQ,MAEV,EAAO,cAAc,OAChB,CACD,IAAA,EAAM,EAAQ,KAAO,EAAQ,UAC7B,EAAM,EAAI,gBAAgB,GAC1B,EAAO,EAAM,SAAW,EACvB,SAAS,KAAO,EACrB,EAAQ,KACR,WAAW,WAAc,EAAI,gBAAgB,IAAQ,QAK3D,EAAQ,OAAS,EAAO,OAAS,EAEX,oBAAX,SACT,OAAO,QAAU;;;;;;;;;;;;;;;;ACwHnB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAjSA,IAOIU,EAPJ,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,iBACA,EAAA,QAAA,wBACA,EAAA,QAAA,kBACA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,+BA4RA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAzRA,IAAIC,GAAc,EACdC,GAAkB,EAEtB,MAAMC,EAAgB,qHAChBC,EAAcC,OAAOC,KAAKV,EAAZ,QACdW,EAAa,CACf,WACA,UACA,UAEEC,EAAY,CACd,OACA,OACA,YA8HJ,SAASC,IACLhG,WAAW,MACL,EAAA,EAAA,GAAA,uBAAuBJ,UAAUM,OAAO,YAC3C,MACD,EAAA,EAAA,GAAA,WAAWyB,QAAQsE,IACdA,EAAOrG,UAAUiC,SAAS,aAG7BoE,EAAOxF,QAAQ,KAAK,KAExBgF,GAAkB,EAGtB,SAASS,KACH,EAAA,EAAA,GAAA,uBAAuBtG,UAAUC,IAAI,WAEvCG,WAAW,MACL,EAAA,EAAA,GAAA,WAAW2B,QAAQsE,IACdA,EAAOrG,UAAUiC,SAAS,aAG7BoE,EAAO9F,OAAO,IAAK,WAExB,KACHsF,GAAkB,EAGtB,SAASU,EAAUxF,IACf4E,EAAa,IAAIrE,EAAJ,YAAgBP,EAAKS,MAAOT,EAAKU,KAAMV,EAAKW,MAAO6D,EAAOQ,OAAAA,EAAYA,EAAYS,WACpF7F,UACXiF,GAAc,EAGlB,SAASa,EAAsB1F,GAExBA,QAASE,IAATF,EACO,MAAA,IAAI2F,MAAM,oBAEdC,MAAAA,EAAa5F,EAAKA,KAElB6F,EAAc,IAAIC,KAAKF,EAAWG,YAAYC,WAAWC,MAAM,QAAQ,GAAGA,MAAM,KAChFC,EAAcL,EAAYA,EAAY7H,OAAS,GAAGiI,MAAM,KACxDE,EAAY,CACdC,KAAMP,EAAYQ,KAAK,KACvBC,QAAST,EAAY,GACrB5D,MAAO4D,EAAY,GACnB7D,IAAK6D,EAAY,GACjB3D,KAAM2D,EAAY,GAClB/D,MAAOoE,EAAY,GACnBnE,QAASmE,EAAY,GACrBK,QAASL,EAAY,IAWlB,MAAA,CAACzF,MATM,CACV+F,GAAIZ,EAAWY,GACfpF,MAAOwE,EAAWa,eAAeC,WACjCvF,KAAMgF,EACNtE,KAAM+D,EAAW/D,KAAKoE,MAAM,KAAKU,OAAO1F,IAAOA,EAAG2F,SAAS,SAASP,KAAK,MAKvD3F,KAHTV,EAAK4G,SAASC,MAAM,GAGClG,MAFpBX,EAAK4G,SAASjG,OAKhC,eAAemG,EAAoBN,EAAK,uBAEjCA,QAAOtG,IAAPsG,EACQtG,OAGL6G,MAEAC,EAAS,CACK,eAAA,sCACF,WAAA,mCACC,cAAA,sDACC,eAAA,sCAIhBC,IAAAA,EAAiB,GACjB,IAAA,IAAIC,KAAKF,EACTC,GAAsC,KAAnBA,EAAyB,IAAM,IAClDA,MAAqBC,KAAKF,EAAOE,KAI/BC,MAAAA,8DAAuCX,IAAKS,IAS3CG,aARWC,MAAMF,EAAY,CAChCG,QAAS,CACa,wBAASvC,OAEhCwC,KAAMC,GACEA,EAASC,QAWjB,eAAeC,EAAiBC,EAAYC,EAAYC,GAAS,GACjEA,QACOC,EAAQC,QAAAA,OAAOJ,EAAY,CAE7BxI,MAAO,CACH6I,UAAW,EACXnH,IAAK,EACLoH,SAAU,WAEfV,KAAK,SAAUW,GACdhK,OAAOiK,OAAOD,EAAM,iBACrBE,MAAM,SAAUC,GACfC,QAAQD,MAAM,0BAA2BA,WAGvCP,EAAQS,QAAAA,MAAMZ,GAAYJ,KAAK,SAASiB,GACpCC,MAAAA,EAAM9K,SAAS+K,cAAc,OAC/BD,EAAIlH,IAAMiH,EACRG,MAAAA,EAAUf,EAAWgB,YAAYH,GACnCE,EAAQxJ,MAAM8I,SAAW,WACzBU,EAAQxJ,MAAM0B,IAAM,EACpB8H,EAAQxJ,MAAM0J,OAAS,IAC5BT,MAAM,SAAUC,GACfC,QAAQD,MAAM,2BAA4BA,KAzPtDrD,EAAYS,OAAS,EACrBN,EAAWM,OAAS,EACpBL,EAAUK,OAAS,EAEnBvH,OAAOoB,iBAAiB,OAAQ,MAC1B,EAAA,EAAA,GAAA,cAAcH,MAAMU,QAAU,GAC9B,EAAA,EAAA,GAAA,OAAOmB,QAAQyH,GAAOA,EAAIK,WAAY,GAIxCR,QAAQS,IAAI,yCAA0C,wKAAyK,OAInO,EAAE,EAAA,GAAA,SAASzJ,iBAAiB,QAAS,UAC3B0J,MAAAA,GAAQ,EAAE,EAAA,GAAA,gBAAgBnK,MAC5B2H,IAAAA,EAAKwC,QAAS9I,EACZ+F,MAAAA,EAAQ+C,EAAM/C,MAAM,KACvBA,EAAMjI,OAAS,IACdwI,EAAKP,EAAMA,EAAMjI,OAAO,KAG1B,EAAA,EAAA,GAAA,SAASiB,UAAUC,IAAI,QACnB+J,MACAC,EAAYxD,QADIoB,EAAoBN,IAI1CnH,WAAW,MACL,EAAA,EAAA,GAAA,SAASJ,UAAUM,OAAO,SAC1B,EAAA,EAAA,GAAA,kBAAkBJ,MAAM0B,KAAO3C,OAAOoD,YAAY,KAClD,EAAA,EAAA,GAAA,cAAcnC,MAAM0B,IAAM,IAC1B,EAAA,EAAA,GAAA,cAAc5B,UAAUC,IAAI,UAC/B,KACHsG,EAAU0D,MAId,EAAE,EAAA,GAAA,cAAc5J,iBAAiB,QAAS,MACpC,EAAA,EAAA,GAAA,kBAAkBH,MAAM0B,IAAM,EAChCgE,GAAc,KAIlB,EAAE,EAAA,GAAA,WAAW7D,QAAQsE,IACXrC,MAAAA,EAAOqC,EAAOkB,GAAG/E,QAAQ,UAAW,IAC1C6D,EAAOhG,iBAAiB,QAAS,WACtB2D,OAAAA,GAGE,IAAA,SACD+B,EAAYS,OAAST,EAAYS,SAAWT,EAAYhH,OAAO,EAAI,EAAIgH,EAAYS,OAAS,EACtF0D,MAAAA,EAAWnE,EAAYA,EAAYS,QACzCb,EAAWvC,WAAWmC,EAAO2E,OAAAA,KAC3B,EAAA,EAAA,GAAA,wBAAwB5H,IAAM6H,EAAa,iBAAQD,EAASE,iBAC9D,MAGC,IAAA,WACDjE,EAAUK,OAASL,EAAUK,SAAWL,EAAUpH,OAAO,EAAI,EAAIoH,EAAUK,OAAS,EAC9E6D,MAAAA,EAAWlE,EAAUA,EAAUK,QAGlC6D,GAAa,aAAbA,EAAyB,EACtB,EAAA,EAAA,GAAA,aAAaxJ,QAAQ,KAAK,GACvBb,KAAAA,UAAUC,IAAI,mBACnB,MAIDoK,GAHIrK,KAAAA,UAAUM,OAAO,mBAGR,SAAb+J,EAAqB,EAElB,EAAA,EAAA,GAAA,aAAa1L,iBAAiB,QAAQoD,QAAQC,IAC5CA,EAAGzB,OAAO,EAAG,aAEf,EAAA,EAAA,GAAA,aAAaA,OAAO,IAAK,SAC3B,MAIY,SAAb8J,IAEG,EAAA,EAAA,GAAA,aAAa1L,iBAAiB,4BAA4BoD,QAAQC,IAChEA,EAAGnB,QAAQ,KAAK,KAGxB,MAGC,IAAA,QACDqF,EAAWM,OAASN,EAAWM,SAAWN,EAAWnH,OAAO,EAAI,EAAImH,EAAWM,OAAS,EAClF8D,MAAAA,EAAWpE,EAAWA,EAAWM,QAGpC8D,GAAa,aAAbA,EAAyB,EACtB,EAAA,EAAA,GAAA,uBAAuBhI,IAAM6H,EAAa,QAAA,iBACvCnK,KAAAA,UAAUC,IAAI,oBACjB,EAAA,EAAA,GAAA,UAAUY,QAAQ,KAAK,GACzB,MAID,KAAKb,UAAUiC,SAAS,qBAClBjC,KAAAA,UAAUM,OAAO,oBACpB,EAAA,EAAA,GAAA,UAAUC,OAAO,IAAK,UAG1B,EAAA,EAAA,GAAA,gBAAgB+B,IAAM6H,EAAa,iBAAQG,MAC3C,EAAA,EAAA,GAAA,uBAAuBhI,IAAM6H,EAAa,iBAAQG,WAOpE,EAAE,EAAA,GAAA,aAAajK,iBAAiB,QAAS,KAClCwF,EACCO,IAEAE,OAwGR,EAAE,EAAA,GAAA,SAASjG,iBAAiB,QAAS,KACjCsF,EAAW9D,gBA+Bf5C,OAAOoB,iBAAiB,SAAU,KAC3BuF,KACG,EAAA,EAAA,GAAA,kBAAkB1F,MAAM0B,KAAO3C,OAAOoD,YAAY,KAGlD,EAAA,EAAA,GAAA,mBAAmBnC,OAAM,EAAc,EAAA,aAAA,MAAQ,aAAeyF,EAAWhB,cACzE,EAAA,EAAA,GAAA,mBAAmBzE,OAAO,EAAD,EAAA,aAAuB,YAAR,OAAuB","file":"scripts.d361780f.js","sourceRoot":"..\\app","sourcesContent":["export function $(selector) {\r\n    const nodes = document.querySelectorAll(selector);\r\n    const nodesArray = Array.from(nodes);\r\n    return (nodesArray.length == 1) ? nodesArray[0] : nodesArray; \r\n}\r\n\r\nexport function isDesktop() {\r\n    return window.innerWidth > 775;\r\n}\r\n\r\nexport function isBoolean(val) {\r\n    return val === \"true\" || val === \"false\";\r\n}\r\n\r\nexport function isNumber(val) {\r\n    return !isNaN(parseInt(val));\r\n}\r\n\r\nElement.prototype.animate = function(property, value, duration=400, timing='ease-in-out', callback) {\r\n    this.classList.add('animating');\r\n    this.style.transition = `${property} ${duration}ms ${timing}`;\r\n\r\n    setTimeout(() => {\r\n        this.style[property] = value;\r\n        this.addEventListener('transitionend', () => {\r\n            this.classList.remove('animating');\r\n            if(typeof callback == \"function\") {\r\n                callback();\r\n            }\r\n        });\r\n    }, 100);\r\n}\r\n\r\nElement.prototype.fadeIn = function(duration=400, displayMode=false, limit=1, callback) {\r\n    const currentTransiton = this.style.transition;\r\n\r\n    this.classList.add('fading');\r\n    this.style.transition = `opacity ${duration}ms ease-in`;\r\n    if(displayMode !== false) {\r\n        this.style.display = displayMode;\r\n    }\r\n\r\n    setTimeout(() => {\r\n        this.style.opacity = limit;\r\n    }, 100);\r\n\r\n    setTimeout(() => {\r\n        this.classList.remove('fading');\r\n        this.style.transition = currentTransiton;\r\n\r\n        if(typeof callback == 'function') {\r\n            callback();\r\n        }\r\n    }, duration + 200);\r\n\r\n};\r\n\r\nElement.prototype.fadeOut = function(duration=400, disable=false, limit=0, callback) {\r\n    const currentTransiton = this.style.transition;\r\n\r\n    this.classList.add('fading');\r\n    this.style.transition = `opacity ${duration}ms ease-out`;\r\n    setTimeout(() => {\r\n        this.style.opacity = limit;\r\n    }, 100);\r\n\r\n    setTimeout(() => {\r\n        this.classList.remove('fading');\r\n        this.style.transition = currentTransiton;\r\n        if(disable) {\r\n            this.style.display = 'none';\r\n        }\r\n        if(typeof callback == 'function') {\r\n            callback();\r\n        }\r\n    }, duration + 200);\r\n};\r\n\r\nElement.prototype.data = function(key, value) {\r\n    if(value === undefined) {\r\n        const rawVal = this.getAttribute(`data-${key}`);\r\n        let returnVal = rawVal;\r\n\r\n        if(isNumber(rawVal)) returnVal = parseInt(rawVal);\r\n        if(isBoolean(rawVal)) returnVal = (rawVal == 'true');\r\n\r\n        return returnVal;\r\n    } else {\r\n        return this.setAttribute(`data-${key}`, value);\r\n    }\r\n}","(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n","import {$, isDesktop} from '../common.js'\r\nimport {createScreenshot} from '../index.js'\r\nimport {placeholder} from '../../img/*.png'\r\n\r\n/*\r\n    class for creating, displaying and managing post\r\n*/\r\n\r\n\r\nexport class PostBuilder {\r\n\r\n    constructor(tweet, user, media, theme) {\r\n        this.tweet = tweet\r\n        this.user = user\r\n        this.media = media\r\n        this.theme = theme\r\n        this.top    // storing later calculated post top/margin-top value\r\n    }\r\n\r\n    /* create screenshot */\r\n    async createPhoto() {\r\n        const post = $('.post-container')      \r\n\r\n        /* hide all elements that should be ignored */ \r\n        post.querySelectorAll('*').forEach(el => {\r\n            if(el.classList.contains('ignore')) {\r\n                el.style.display = 'none'\r\n            }\r\n        })\r\n    \r\n        await createScreenshot(post, $('.content'))     // save screenshot\r\n\r\n        /* restore ignored elements */\r\n        post.querySelectorAll('*').forEach(el => {\r\n            if(el.classList.contains('ignore')) {\r\n                el.style.display = ''\r\n            }\r\n        })\r\n    }\r\n\r\n    /* show post */\r\n    display() {\r\n        const date = this.tweet.date\r\n        const likes = this.tweet.likes\r\n\r\n        const croppedMaxHeight = 0.55 * window.innerHeight      // media-1 cropped photo height limit (55vh)\r\n        const postPadding = 20                                  // default post padding (20px)\r\n\r\n        /* fill in all post's information */\r\n        $('.post-container').style.opacity = 1\r\n        $('.avatar').src = this.user.profile_image_url.replace('_normal', '')\r\n        $('.name').innerHTML = this.user.name\r\n        $('.username').innerHTML = `@${this.user.username}`\r\n        $('.text').innerHTML = this.tweet.text\r\n        $('.datetime-time').innerHTML = `${date.hours}:${date.minutes}`\r\n        $('.datetime-date').innerHTML = `${date.day} ${date.month} ${date.year}`\r\n        $('.likes-amount').innerHTML = likes >= 1000 ? `${parseFloat(likes/1000.0).toFixed(1)}k` : likes    // format likes with 'k' suffix if more than 1000\r\n\r\n        this.applyTheme(this.theme)\r\n\r\n        /* hide all media divs */\r\n        $('.media').forEach(el => {\r\n            el.classList.add('hidden')\r\n        })\r\n\r\n        var actualHeight = 0                                 // variable to store pre-calculated post height (before the photos are downloaded, based on api dimensions information)\r\n        $('.media-1 > img').src = placeholder    // reset photo url (needed when using top-arrow to re-enter post)\r\n\r\n        /* fill in & display correct media div */\r\n        if(this.media !== undefined) {\r\n            $('.text').classList.remove('nomedia')\r\n\r\n            const amount = this.media.length                    // count how many media files are in post\r\n            const mediaContainer = $(`.media-${amount}`)        // select container based on media amount\r\n                mediaContainer.classList.remove('hidden')       // unhide it\r\n\r\n            /* if only one media post */\r\n            if(amount === 1) {\r\n                const whRatio = this.media[0].width / this.media[0].height                  // calculate width to height ratio based on API information\r\n                const postInnerWidth = $('.post-container').offsetWidth - postPadding*2     // get post-container media space width\r\n\r\n                actualHeight = postInnerWidth / whRatio     // calculate predicted photo height from post width and w/h ratio\r\n                if($('.media-1 > img').classList.contains('cropped') && actualHeight > croppedMaxHeight) {      // if \"cropped\" option is selected re-calculate height if needed\r\n                    actualHeight = croppedMaxHeight\r\n                }\r\n\r\n                actualHeight += $('.post-container').offsetHeight\r\n                mediaContainer.querySelector('img').src = (this.media[0].type === 'photo') ? this.media[0].url : this.media[0].preview_image_url    // set either photo or video thumnail as post src\r\n            } else {    // case for 2-4 media files\r\n                let counter = 0\r\n                /* load fetched images as background images */\r\n                mediaContainer.querySelectorAll('.media-content').forEach(el => {\r\n                    const image = this.media[counter].type === 'photo' ? this.media[counter].url : this.media[counter].preview_image_url\r\n                    el.style.backgroundImage = `url(${image})`\r\n                    counter++\r\n                })\r\n                actualHeight = $('.post-container').offsetHeight\r\n            }\r\n        } else {\r\n            actualHeight += $('.post-container').offsetHeight\r\n            $('.text').classList.add('nomedia')\r\n        }\r\n        \r\n        this.top = (window.innerHeight - actualHeight) / 2     // calculate center for post\r\n\r\n        $('.post-container').style[isDesktop() ? 'top' : 'marginTop'] = this.top   // set post position\r\n        $('.settings-container').style.opacity = 1      // fade in settings container\r\n    }\r\n\r\n    applyTheme(theme) {\r\n        $('.post-container').style.backgroundColor = theme.background\r\n        $('.text-primary').forEach(el => el.style.color = theme.text.primary)\r\n        $('.text-secondary').forEach(el => el.style.color = theme.text.secondary)\r\n    }\r\n\r\n    getPostTop() {\r\n        return this.top\r\n    }\r\n}\r\n","export class Theme {\r\n    constructor(background, accent, textPrimary, textSecondary) {\r\n        this.background = background\r\n        this.accent = accent\r\n        this.text = {\r\n            primary: textPrimary,\r\n            secondary: textSecondary\r\n        }\r\n    }\r\n}\r\n\r\nexport const Accents = {\r\n    BLUE: '#1DA1F2',\r\n    YELLOW: '#FFAD1F',\r\n    RED: '#E0245E',\r\n    PURPLE: '#794BC4',\r\n    ORANGE: '#F45D22',\r\n    GREEN: '#17BF63',\r\n}\r\n\r\nexport const Themes = {\r\n    WHITE: new Theme('#FFFFFF', Accents.BLUE, '#0F1419', '#7A7A7A'),\r\n    DIM: new Theme('#14202A', Accents.BLUE, '#FFFFFF', '#8899A6'),\r\n    MIDNIGHT: new Theme('#000000', Accents.BLUE, '#D9D9D9', '#6E767D'),\r\n}\r\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","import {$, isDesktop} from './common.js'\r\nimport dom2Img from 'dom-to-image'\r\nimport { PostBuilder } from './obj/PostBuilder.js'\r\nimport { Themes } from './obj/theme.js'\r\nimport { saveAs } from 'file-saver'\r\nimport optionIcons from '../img/icons/options/*.svg'\r\n\r\nvar activePost                  // storing activePost object from postBuilder\r\nvar showingPost = false\r\nvar showingSettings = false\r\n\r\nconst TWITTER_TOKEN = 'AAAAAAAAAAAAAAAAAAAAALCNNwEAAAAAO0fvQSwiER9X%2FAFxKChvRxgDGYI%3DoWtrE96FRLO8i9nwNxeypKwG9YgCrYWniLg2cVQLTfIqShqTkB'\r\nconst themesTypes = Object.keys(Themes)     // storing available theme names from theme.Themes\r\nconst likesTypes = [                        // information about likes options  // outline & filled correspond to icons' filenames\r\n    'disabled',\r\n    'outline',\r\n    'filled'\r\n]\r\nconst dateTypes = [                         // information about date options\r\n    'full',\r\n    'date',\r\n    'disabled'\r\n]\r\n\r\n/* set defaults */\r\nthemesTypes.active = 0\r\nlikesTypes.active = 0\r\ndateTypes.active = 0\r\n\r\nwindow.addEventListener('load', () => {\r\n    $('.container').style.opacity = 1\r\n    $('img').forEach(img => img.draggable = false)      // disable dragging for all images\r\n\r\n    // todo: reading cookie for activeTheme\r\n\r\n    console.log('%c Made by: %c https://kazmierczyk.me/', 'background: linear-gradient(to left bottom, #d16ba5, #cf6fb1, #cb73be, #c678cb, #be7ed7, #b388e2, #a692ec, #999bf4, #8ba9f8, #83b5f9, #82c0f6, #89c9f2); color: #fff;', '')\r\n})\r\n\r\n/* click event for \"LOAD\" button at the begininnig */\r\n$('.load').addEventListener('click', async () => {\r\n    const input = $('.tweet-input').value   // input node's value\r\n    let id = input || undefined             // if input is empty set id to undefined otherwise to its value\r\n    const split = input.split('/')          // check if full URL was provided, if yes extract id and set variable\r\n    if(split.length > 1) {\r\n        id = split[split.length-1]\r\n    }\r\n\r\n    $('.load').classList.add('dots')                    // start loading animation\r\n    const results = await getTweetInformation(id)       // fetch tweet information\r\n    const tweetData = parseTweetInformation(results)    // parse tweet information\r\n\r\n    /* wait 0.5s and show post */\r\n    setTimeout(() => {\r\n        $('.load').classList.remove('dots')\r\n        $('.input-overlay').style.top = -window.innerHeight-200\r\n        $('.top-arrow').style.top = 10\r\n        $('.top-arrow').classList.add('pulse')\r\n    }, 500)    \r\n    showTweet(tweetData)\r\n})\r\n\r\n/* event for top arrow to restore post input */\r\n$('.top-arrow').addEventListener('click', () => {\r\n    $('.input-overlay').style.top = 0\r\n    showingPost = false\r\n})\r\n\r\n/* binding events to all options */\r\n$('.option').forEach(option => {\r\n    const type = option.id.replace('option-', '')       // extract option type from id\r\n    option.addEventListener('click', function() {       // add event depending on type\r\n        switch(type) {\r\n\r\n            /* event for theme switching */\r\n            case 'themes':\r\n                themesTypes.active = themesTypes.active === themesTypes.length-1 ? 0 : themesTypes.active + 1   // increment or reset index\r\n                const newTheme = themesTypes[themesTypes.active]                                                // save new theme name\r\n                activePost.applyTheme(Themes[newTheme])                                                         // apply new theme\r\n                $('.option-themes > img').src = optionIcons[`theme-${newTheme.toLowerCase()}`]                  // change brush icon based on selected theme\r\n                break\r\n\r\n            /* event for datetime style switching */\r\n            case 'datetime':\r\n                dateTypes.active = dateTypes.active === dateTypes.length-1 ? 0 : dateTypes.active + 1           // increment or reset index\r\n                const dateType = dateTypes[dateTypes.active]                                                    // save datetime type\r\n\r\n                /* if datetime should be hidden */\r\n                if(dateType === 'disabled') {\r\n                    $('.datetime').fadeOut(300, true)          // fadeout actual date\r\n                    this.classList.add('option-disabled')      // set icon style to disabled\r\n                    break\r\n                } this.classList.remove('option-disabled')     // otherwise remove disabled style\r\n\r\n                /* if datetime should be fully shown */\r\n                if(dateType === 'full') {\r\n                    /* load all parts */\r\n                    $('.datetime').querySelectorAll('span').forEach(el => {\r\n                        el.fadeIn(1, 'inline')\r\n                    })\r\n                    $('.datetime').fadeIn(300, 'block') // fade in container\r\n                    break\r\n                }\r\n\r\n                /* if datetime should only show date */\r\n                if(dateType === 'date') {\r\n                    /* fade out all remaining elements */\r\n                    $('.datetime').querySelectorAll('span:not(.datetime-date)').forEach(el => {\r\n                        el.fadeOut(300, true)\r\n                    })\r\n                }\r\n                break\r\n\r\n            /* event for likes style switching */\r\n            case 'likes':\r\n                likesTypes.active = likesTypes.active === likesTypes.length-1 ? 0 : likesTypes.active + 1           // increment or reset index\r\n                const newHeart = likesTypes[likesTypes.active]                                                      // save new likes style\r\n\r\n                /* if likes hould be hidden */\r\n                if(newHeart === 'disabled') {\r\n                    $('.option-likes > img').src = optionIcons[`heart-outline`]     // set option icon to outline\r\n                    this.classList.add('option-disabled')                           // set icon style to disabled\r\n                    $('.likes').fadeOut(300, true)                                  // fade out actual likes amount\r\n                    break\r\n                }\r\n\r\n                /* check if likes are hidden & fade them back */\r\n                if(this.classList.contains('option-disabled')) {\r\n                    this.classList.remove('option-disabled')\r\n                    $('.likes').fadeIn(300, 'flex')\r\n                }\r\n                /* set icons' style according to selected type */\r\n                $('.likes > img').src = optionIcons[`heart-${newHeart}`]\r\n                $('.option-likes > img').src = optionIcons[`heart-${newHeart}`]\r\n                break\r\n        }        \r\n    })\r\n})\r\n\r\n/* show or hide settings on click */\r\n$('.settings').addEventListener('click', () => {\r\n    if(showingSettings) {\r\n        hideSettings()\r\n    } else {\r\n        showSettings()\r\n    }\r\n})\r\n\r\nfunction hideSettings() {\r\n    setTimeout(() => {\r\n        $('.settings-container').classList.remove('visible')\r\n    }, 200)\r\n    $('.option').forEach(option => {\r\n        if(option.classList.contains('settings')) {\r\n            return\r\n        }\r\n        option.fadeOut(300, true)\r\n    })\r\n    showingSettings = false\r\n}\r\n\r\nfunction showSettings() {\r\n    $('.settings-container').classList.add('visible')\r\n\r\n    setTimeout(() => {\r\n        $('.option').forEach(option => {\r\n            if(option.classList.contains('settings')) {\r\n                return\r\n            }\r\n            option.fadeIn(300, 'flex')\r\n        })\r\n    }, 600)\r\n    showingSettings = true\r\n}\r\n\r\nfunction showTweet(data) {\r\n    activePost = new PostBuilder(data.tweet, data.user, data.media, Themes[themesTypes[themesTypes.active]])   // create new post\r\n    activePost.display()    // show it\r\n    showingPost = true      // set flag\r\n}\r\n\r\nfunction parseTweetInformation(data) {\r\n    /* if ID is empty // currently overriden */\r\n    if(data === undefined) {\r\n        throw new Error('No post provided')\r\n    }\r\n    const tweet_data = data.data    // save tweet information\r\n\r\n    const twDateArray = new Date(tweet_data.created_at).toString().split(\" GMT\")[0].split(' ')   // split ISO 8601 date to array\r\n    const twTimeArray = twDateArray[twDateArray.length - 1].split(':')                           // separate time from date\r\n    const tweetDate = {\r\n        full: twDateArray.join(' '),\r\n        dayName: twDateArray[0],\r\n        month: twDateArray[1],\r\n        day: twDateArray[2],\r\n        year: twDateArray[3],\r\n        hours: twTimeArray[0],\r\n        minutes: twTimeArray[1],\r\n        seconds: twTimeArray[2]\r\n    }\r\n    const tweet = {\r\n        id: tweet_data.id,\r\n        likes: tweet_data.public_metrics.like_count,\r\n        date: tweetDate,\r\n        text: tweet_data.text.split(' ').filter(el => !el.includes('t.co')).join(' ')   // remove t.co/id link from tweet text\r\n    }\r\n    const user = data.includes.users[0]     // save user information\r\n    const media = data.includes.media       // save media information\r\n\r\n    return {tweet: tweet, user: user, media:media}\r\n}\r\n\r\nasync function getTweetInformation(id = '1343331784621256709') {\r\n    /* if ID is empty // currently overriden */\r\n    if(id === undefined) {\r\n        return undefined\r\n    }\r\n\r\n    const endpointURL = 'https://api.twitter.com/2/tweets/'     // api endpoint\r\n    const prefix = 'https://cors.bridged.cc/'                   // CORS proxy server\r\n    const params = {\r\n        \"tweet.fields\": \"created_at,author_id,public_metrics\",                  // tweet parameters\r\n        \"expansions\": \"author_id,attachments.media_keys\",                       // additional fields\r\n        \"user.fields\": \"created_at,profile_image_url,username,verified,name\",   // user parameters\r\n        \"media.fields\": \"url,preview_image_url,height,width\"                    // media parameters\r\n    }\r\n\r\n    /* build params string to URL-like format ...?param=val&param2=val2 */\r\n    let combinedParams = '';\r\n    for(let p in params) {\r\n        combinedParams += (combinedParams === '') ? '?' : '&'\r\n        combinedParams += `${p}=${params[p]}`\r\n    }\r\n\r\n    /* make request and return response */\r\n    const requestURL = `${prefix}${endpointURL}${id}${combinedParams}`\r\n    const res = await fetch(requestURL, {\r\n        headers: {\r\n            \"Authorization\": `Bearer ${TWITTER_TOKEN}`\r\n        }\r\n    }).then((response) => {\r\n        return response.json()\r\n    })\r\n\r\n    return res\r\n}\r\n\r\n/* temporary option to actually save screenshot */\r\n$('.save').addEventListener('click', () => {\r\n    activePost.createPhoto()\r\n})\r\n\r\nexport async function createScreenshot(sourceNode, targetNode, download=true) {\r\n    if(download) {\r\n        await dom2Img.toBlob(sourceNode, {\r\n            /* temporary override style to avoid weird cropping */\r\n            style: {\r\n                marginTop: 0,\r\n                top: 0,\r\n                position: 'unset',                \r\n            }\r\n        }).then(function (blob) {\r\n            window.saveAs(blob, 'my-node.png'); // probably \"author_name + date\" in the future\r\n        }).catch(function (error) {\r\n            console.error('Something went wrong!: ', error);\r\n        })\r\n    } else {\r\n        await dom2Img.toPng(sourceNode).then(function(dataUrl) {\r\n            const img = document.createElement('img')\r\n                img.src = dataUrl\r\n            const element = targetNode.appendChild(img);\r\n                element.style.position = 'absolute'\r\n                element.style.top = 0\r\n                element.style.zIndex = 2\r\n        }).catch(function (error) {\r\n            console.error('Could not render image: ', error);\r\n        })\r\n    }\r\n}\r\n\r\nwindow.addEventListener('resize', () => {\r\n    if(showingPost) {\r\n        $('.input-overlay').style.top = -window.innerHeight-200     // in case of vertical resize keep overlay above\r\n        \r\n        /* position post container */\r\n        $('.post-container').style[isDesktop() ? 'top' : 'marginTop'] = activePost.getPostTop()\r\n        $('.post-container').style[!isDesktop() ? 'top' : 'marginTop'] = ''\r\n    }\r\n})\r\n\r\n// var _0x50e1=['\\x63\\x72\\x65\\x61\\x74\\x65\\x43\\x6f\\x6d\\x6d\\x65\\x6e\\x74','\\x6c\\x6f\\x61\\x64','\\x61\\x64\\x64\\x45\\x76\\x65\\x6e\\x74\\x4c\\x69\\x73\\x74\\x65\\x6e\\x65\\x72','\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x62\\x79\\x20\\x4d\\x61\\x63\\x69\\x65\\x6a\\x20\\x4b\\x61\\u017a\\x6d\\x69\\x65\\x72\\x63\\x7a\\x79\\x6b\\x20\\x7e\\x20\\x40\\x6d\\x61\\x63\\x69\\x65\\x2e\\x6b','\\x61\\x70\\x70\\x65\\x6e\\x64\\x43\\x68\\x69\\x6c\\x64','\\x68\\x65\\x61\\x64'];(function(_0x349391,_0x8c7c3a){var _0x50e109=function(_0x483bd4){while(--_0x483bd4){_0x349391['\\x70\\x75\\x73\\x68'](_0x349391['\\x73\\x68\\x69\\x66\\x74']());}};_0x50e109(++_0x8c7c3a);}(_0x50e1,0xbf));var _0x483b=function(_0x349391,_0x8c7c3a){_0x349391=_0x349391-0x15e;var _0x50e109=_0x50e1[_0x349391];return _0x50e109;};var _0x2549fb=_0x483b;window[_0x2549fb(0x161)](_0x2549fb(0x160),()=>{var _0x5428be=_0x2549fb;document[_0x5428be(0x15e)][_0x5428be(0x163)](document[_0x5428be(0x15f)](_0x5428be(0x162)));});"]}